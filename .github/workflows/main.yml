name: Nog Api Ci

on:
  push:
    branches:

jobs:
  test_build:
    name: test and build
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - uses: whoan/docker-build-with-cache-action@v5
      with:
        image_name: gaugau3000/nog_api
        username: gaugau3000
        password: "${{ secrets.DOCKER_PASSWORD }}"
        image_tag: tmp
    - name : run tests
      run: docker-compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from test
    - name: tag and push to docker repo branch
      run: |
        docker tag gaugau3000/nog_api:tmp gaugau3000/nog_api:"${GITHUB_HEAD_REF}" \
        && docker push gaugau3000/nog_api:"${GITHUB_HEAD_REF}"
    - name: tag and push to docker repo latest
      if: github.ref == 'refs/heads/master'
      run: |
        docker tag gaugau3000/nog_api:tmp gaugau3000/nog_api:latest \
        && docker push gaugau3000/nog_api:latest

  deploy:
    if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
    needs: test_build
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: Copy deploy scripts to remote
      uses: garygrossgarten/github-action-scp@release
      with:
        local: ./scripts/remote/
        remote: /tmp/nog_api/
        host: ${{ secrets.HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        privateKey: ${{ secrets.DEPLOY_KEY }}
        port: ${{ secrets.DEPLOY_PORT }}
    - name: set environment variables for staging
      if: github.ref == 'refs/heads/develop'
      uses: allenevans/set-env@v1.0.0
      with:
        CONTENER_NAME: notonlygeek-api_staging
        NETWORK : notonlygeek_staging
    - name: set environment variables for production
      if: github.ref == 'refs/heads/master'
      uses: allenevans/set-env@v1.0.0
      with:
        CONTENER_NAME: notonlygeek-api_production
        NETWORK : notonlygeek_production
    - name: deploy api to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        key: ${{ secrets.DEPLOY_KEY }}
        port: ${{ secrets.DEPLOY_PORT }}
        script_stop: "true"
        envs: CONTENER_NAME, GITHUB_REPOSITORY,GITHUB_HEAD_REF, NETWORK
        script: >
          chmod +x /tmp/nog_api/deploy_container.sh &&
          CONTENER_NAME=${CONTENER_NAME} GITHUB_REPOSITORY=${GITHUB_REPOSITORY}
          NETWORK=${NETWORK} GITHUB_HEAD_REF=${GITHUB_HEAD_REF} /tmp/nog_api/deploy_container.sh
            
        