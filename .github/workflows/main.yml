name: Nog Api Ci


on:
  push:
    branches: [ master ]
  release:
    types: [published]


jobs:
  test:
    name: publish tested image to docker hub
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: create docker test network
      run: docker network create ci
    - name : run test smtp server
      run: docker run -d --name mail_nog --network ci mailhog/mailhog
    - name: build test image
      run: docker build -t nog_api:test -f Dockerfile.test .
    - name: run tests
      run: docker run --network ci --env MAIl_HOST=mail_nog --env MAIl_PORT=1025 nog_api:test
    - name: publish docker image to hub
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: gaugau3000/nog_api
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  deploy:
    needs: [test]
    name: deploy 
    runs-on: ubuntu-16.04
    steps:
      - name: deploy api to staging server
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        env:
          APP_ENV: staging
          CONTENER_NAME: notonlygeek-api_staging
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script_stop: "true"
          envs: CONTENER_NAME, GITHUB_REPOSITORY, APP_ENV
          script: >
            docker stop ${CONTENER_NAME} || true && docker rm ${CONTENER_NAME} || true &&
            docker pull ${GITHUB_REPOSITORY} &&
            docker run -d --restart unless-stopped --name ${CONTENER_NAME} 
            --env NODE_ENV=${APP_ENV} --env MAIl_HOST=notonlygeek_mail --env MAIl_PORT=25
            ${GITHUB_REPOSITORY}:latest
        